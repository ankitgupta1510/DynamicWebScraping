package scrapers;

import java.util.ArrayList;
import java.util.List;

import org.jsoup.Connection;
import org.jsoup.Jsoup;
import org.jsoup.Connection.Response;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import models.HomePolicy;
import models.Policy;

public class HomeInsuranceScraper implements InsuranceScraper {

    public List<? extends Policy> scrape() {
        String homeUrl = "https://www.policybazaar.com/policybazzar-home/callservice.php";
        String homePayload = "task=homeinsuranceTopplanwidget&visitId=";

        List<HomePolicy> policies = new ArrayList<>();

        try {
            Response response = Jsoup.connect(homeUrl)
                .userAgent("Mozilla/5.0 (Windows NT 10.0; Win64; x64)")
                .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8")
                .header("Accept-Language", "en-US,en;q=0.5")
                .header("Content-Type", "application/x-www-form-urlencoded")
                .ignoreContentType(true)
                .timeout(15000)
                .requestBody(homePayload)
                .method(Connection.Method.POST)
                .execute();

            String htmlContent = response.body();
            Document doc = Jsoup.parse(htmlContent);

            // âœ… Har plan ke liye block select karo
            Elements blocks = doc.select("div.block-inner");

            for (Element block : blocks) {
                // Plan Name
                String planName = block.selectFirst(".plan-name") != null 
                                    ? block.selectFirst(".plan-name").text() 
                                    : "";

                // Logo URL
                String logoURL = block.selectFirst(".logo-block img") != null 
                                    ? block.selectFirst(".logo-block img").attr("src") 
                                    : "";

                // Premium/Year (last claim-settlement me hota hai)
                String premium = "";
                Elements claims = block.select(".claim-settlement");
                for (Element claim : claims) {
                    if (claim.text().contains("Premium/Year")) {
                        premium = claim.select("p").get(1).text();
                        break;
                    }
                }

                if (!planName.isEmpty() && !premium.isEmpty()) {
                    HomePolicy policy = new HomePolicy(planName, logoURL, premium);
                    policies.add(policy);
                }
            }

        } catch (Exception e) {
            System.err.println("Error processing plan: " + e.getMessage());
        }
        return policies;
    }

    @Override
    public String[] getHeaders() {
        return new String[] { "Policy Name", "Logo URL", "Premium/Year" };
    }

    @Override
    public String getSheetName() {
        return "HomeInsurance";
    }
}
