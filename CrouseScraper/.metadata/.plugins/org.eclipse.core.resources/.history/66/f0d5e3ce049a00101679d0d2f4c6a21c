package flow;

import org.jsoup.Connection;
import org.jsoup.Jsoup;
import org.jsoup.Connection.Response;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

public class MainTestCheck {

    public static void main(String[] args) {
        String bikeUrl = "https://www.policybazaar.com/services/gettwservices.php";
        String bikePayload = "{\"task\":\"newtopplansfullwidth\"}";

        try {
            Response response = Jsoup.connect(bikeUrl)
                .userAgent("Mozilla/5.0 (Windows NT 10.0; Win64; x64)")
                .header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8")
                .header("Accept-Language", "en-US,en;q=0.5")
                .header("Content-Type", "application/x-www-form-urlencoded")
                .ignoreContentType(true)
                .timeout(15000)
                .requestBody(bikePayload)
                .method(Connection.Method.POST)
                .execute();
                
            String htmlContent = response.body();
            Document doc = Jsoup.parse(htmlContent);
            
            // Extract plans from all tabs (comprehensive, third-party, own-damage)
            extractPlansFromTab(doc, "comprehensive-plan", "Comprehensive Plans");
            extractPlansFromTab(doc, "third-party-plan", "Third Party Plans");
            extractPlansFromTab(doc, "own-damage-plan", "Own Damage Plans");
            
        } catch (Exception e) {
            System.err.println("Error occurred: " + e.getMessage());
            e.printStackTrace();
        }
    }
    
    private static void extractPlansFromTab(Document doc, String tabClass, String planType) {
        System.out.println("\n=== " + planType + " ===");
        
        Elements tabContent = doc.select("." + tabClass);
        if (tabContent.isEmpty()) {
            System.out.println("No content found for " + planType);
            return;
        }
        
        Elements plans = tabContent.select(".plan-card");
        System.out.println("Found " + plans.size() + " plans");
        
        for (Element plan : plans) {
            try {
                // Extract insurer name
                String insurerName = plan.select(".insurer-name span").text();
                
                // Extract price
                String price = plan.select(".price span").text();
                
                // Extract image URL
                String imageUrl = plan.select(".insurer-name img").attr("src");
                if (!imageUrl.isEmpty() && !imageUrl.startsWith("http")) {
                    imageUrl = "https://static.pbcdn.in" + imageUrl;
                }
                
                // Extract supplier ID from data attribute
                String supplierId = plan.select(".check-premium").attr("data-supplier");
                
                // Extract features (from plan-card-bottom if expanded)
                Elements features = plan.select(".plan-card-bottom div");
                StringBuilder featuresList = new StringBuilder();
                for (Element feature : features) {
                    String featureText = feature.text().trim();
                    if (!featureText.isEmpty() && !featureText.contains("Check premium")) {
                        if (featuresList.length() > 0) featuresList.append(", ");
                        featuresList.append(featureText);
                    }
                }
                
                // Print extracted data
                System.out.println("Insurer: " + insurerName);
                System.out.println("Price: " + price);
                System.out.println("Image URL: " + imageUrl);
                System.out.println("Supplier ID: " + supplierId);
                if (featuresList.length() > 0) {
                    System.out.println("Features: " + featuresList.toString());
                }
                System.out.println("---");
                
            } catch (Exception e) {
                System.err.println("Error processing plan: " + e.getMessage());
            }
        }
    }
}