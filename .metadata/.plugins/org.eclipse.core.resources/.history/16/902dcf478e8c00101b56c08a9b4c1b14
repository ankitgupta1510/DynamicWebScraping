package web;

import java.util.ArrayList;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONObject;
import org.jsoup.Connection;
import org.jsoup.Connection.Response;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import crawlerDesign.ProductData;

public class WebScrapper {

	public static void main(String[] args) {
//		String url = "https://www.dmart.in/_next/data/AOEhMJKtyA2_30DGww1_b/category/biscuits---cookies-aesc-biscuitsandcookies.json?token=biscuits---cookies-aesc-biscuitsandcookies";
//		String url ="https://digital.dmart.in/api/v1/categories/@top?profile=details&storeId=10151";
//		String url2 = "https://digital.dmart.in/api/v3/plp/biscuits---cookies-aesc-biscuitsandcookies?page=4&size=40&channel=web&storeId=10151";
		String url = "https://www.dmart.in/_next/data/AOEhMJKtyA2_30DGww1_b/category/packaged-food-aesc-packagedfoodcore.json?token=packaged-food-aesc-packagedfoodcore";
		try {	
			Response doc;
			doc = Jsoup
					.connect(url)
					.userAgent("Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:142.0) Gecko/20100101 Firefox/142.0")
					.header("Accept", "application/json, text/plain, */*")
					.header("Accept-Language", "en-US,en;q=0.5")
					.header("X-REQUEST-ID", "MDUwNzA2OTktOGIwZi00ZTY3LTlmOGQtNzAwOTliMzhjNTQyfHxTLTIwMjUwODI2XzE3MzEzN3x8MTA0NDk1NTc1")
					.header("d_info", "w-20250826_173137")
					.header("Origin", "https://www.dmart.in")
					.ignoreContentType(true).method(Connection.Method.GET).execute();
			
//			System.out.println(doc.body());
			String jsonRes = doc.body();
			 List<ProductData> reqProducts = parseProductsFromJson(jsonRes);
		        System.out.println("Total products= " + reqProducts.size());
		        
		        for (ProductData product : reqProducts) {
		            System.out.println(product);
		        }
			
			
		}catch(Exception e){
			e.printStackTrace();
		}
		
//		System.out.println(count);
	}
	
	
	 private static List<ProductData> parseProductsFromJson(String jsonString) {
	        List<ProductData> products = new ArrayList<>();
	        
	        try {
	            JSONObject jsonObj = new JSONObject(jsonString);
	            
	            if (jsonObj.has("products")) {
	                JSONArray productsArray = jsonObj.getJSONArray("products");
	                
	                for (int i = 0; i < productsArray.length(); i++) {
	                    JSONObject product = productsArray.getJSONObject(i);
	                    
	                    String categoryName = product.optString("categoryName", "N/A");
	                    String productName = product.optString("name", "N/A");
	                    
	                    JSONArray skus = product.optJSONArray("sKUs");
	                    if (skus != null) {
	                        for (int j = 0; j < skus.length(); j++) {
	                            JSONObject sku = skus.getJSONObject(j);
	                            
	                            String variantWtStr = sku.optString("variantTextValue", "0 g")
	                                                    .replace("g", "").trim();
	                            double variantWt = parseWeight(variantWtStr);
	                            
	                            

	                            double priceMRP = sku.optDouble("priceMRP", 0.0);
	                            
	                            ProductData productData = new ProductData(
	                                categoryName, productName, variantWt, priceMRP
	                            );
	                            products.add(productData);
	                        }
	                    }
	                }
	            }
	        } catch (Exception e) {
	            System.out.println("Error parsing JSON: " + e.getMessage());
	        }
	        
	        return products;
	    }
	 
	 private static double parseWeight(String weightStr) {
	        try {
	            return Double.parseDouble(weightStr);
	        } catch (Exception e) {
	            return 0.0;
	        }
	    }

}
